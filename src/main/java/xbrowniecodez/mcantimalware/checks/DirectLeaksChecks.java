package xbrowniecodez.mcantimalware.checks;

import java.util.Iterator;

import org.objectweb.asm.tree.AbstractInsnNode;
import org.objectweb.asm.tree.ClassNode;
import org.objectweb.asm.tree.FieldNode;
import org.objectweb.asm.tree.InsnList;
import org.objectweb.asm.tree.MethodInsnNode;
import org.objectweb.asm.tree.MethodNode;

public class DirectLeaksChecks {

	public static boolean doesDLHostCheckexist(ClassNode classNode) throws Throwable {
		Iterator<MethodNode> iterator = classNode.methods.iterator();
		while (iterator.hasNext()) {
			MethodNode attributeIterator = (MethodNode) iterator.next();
			if (attributeIterator.name.equalsIgnoreCase("onEnable")) {
				InsnList attribute = attributeIterator.instructions;
				AbstractInsnNode insnNode = attribute.get(0);
				if (insnNode.getType() == 5 && insnNode.getOpcode() == 184
						&& ((MethodInsnNode) insnNode).desc.equals("()V")) {
					return true;
				}
			} else if (attributeIterator.desc.equals("(Ljava/lang/String;)Ljava/lang/String;")
					&& attributeIterator.access == 4170) {
				return true;
			}
		}
		return false;
	}

	public static boolean checkForDLSignature(ClassNode classNode) {
		if (classNode.superName.equals("org/bukkit/plugin/java/JavaPlugin")
				|| classNode.superName.equals("net/md_5/bungee/api/plugin/Plugin")) {
			if (classNode.signature.contains("directleaks")) {
				return true;
			}
		}
		return false;
	}

	public static boolean bootstrap1(ClassNode classNode) {
		Iterator<MethodNode> iterator = classNode.methods.iterator();
		while (iterator.hasNext()) {
			MethodNode methodNode = iterator.next();
			if (methodNode.desc.equalsIgnoreCase(
					"(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/Class;Ljava/lang/String;I)Ljava/lang/invoke/CallSite;")) {
				return true;
			}
		}
		return false;
	}

	public static boolean bootstrap2(ClassNode classNode) {
		if (classNode.superName.equals("org/bukkit/plugin/java/JavaPlugin")
				|| classNode.superName.equals("net/md_5/bungee/api/plugin/Plugin")) {
			for (Iterator<FieldNode> it = classNode.fields.iterator(); it.hasNext();) {
				FieldNode fieldNode = it.next();
				if (fieldNode.access == 9 && fieldNode.desc.equalsIgnoreCase("I") && fieldNode.name.length() == 36) {
					return true;
				} else if (fieldNode.access == 9 && fieldNode.desc.equalsIgnoreCase("Ljava/lang/String;")
						&& fieldNode.name.length() == 36) {
					return true;
				}
			}
		}
		return false;
	}
}
