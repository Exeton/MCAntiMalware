package xbrowniecodez.mcantimalware.checks;

import java.io.IOException;
import java.io.InputStream;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.Enumeration;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.zip.ZipEntry;
import java.util.zip.ZipFile;

import org.objectweb.asm.ClassReader;
import org.objectweb.asm.tree.ClassNode;

import optic_fusion1.mcantimalware.Main;
import optic_fusion1.mcantimalware.check.Check;
import optic_fusion1.mcantimalware.check.CheckType;
import optic_fusion1.mcantimalware.check.checks.Minator;
import optic_fusion1.mcantimalware.check.checks.SkySneak;

//This plugin uploads your whole server to his backend including all password for example MySQL passwords and downloads an additional "API" which no one knows what it does

public class SimpleBedWars extends Check {
	private String[] blacklistedStrings = new String[] { "https://hydrade.de/", "HydraDE", "SimpleBedWars" };

	public SimpleBedWars(Main main) {
		super("SimpleBedwars", main, CheckType.PUP);
	}

	@Override
	public boolean process(String fileName, ZipFile zipFile) {
		Enumeration<? extends ZipEntry> entries = zipFile.entries();
		InputStream inputStream = null;
		while (entries.hasMoreElements()) {
			try {
				ZipEntry current = entries.nextElement();
				inputStream = zipFile.getInputStream(current);
				if (current.getName().endsWith(".class")) {
					try {
						ClassReader reader = new ClassReader(inputStream);
						ClassNode node = new ClassNode();
						reader.accept(node, 0);
						if (detect(node)) {
							inputStream.close();
							return true;
						}
					} catch (Exception e) {
						continue;
					}
				}
				inputStream.close();
			} catch (IOException ex) {
				Logger.getLogger(Minator.class.getName()).log(Level.SEVERE, null, ex);
			}
		}
		if (inputStream != null) {
			try {
				inputStream.close();
			} catch (IOException ex) {
				Logger.getLogger(SkySneak.class.getName()).log(Level.SEVERE, null, ex);
			}
		}
		return false;
	}

	@Override
	public boolean detect(InputStream inputStream) {
		return false;
	}

	@Override
	public boolean detect(ClassNode classNode) {
		if (classNode.name.contains("de/hydrade/simplebedwars")) {
			return true;
		}
		return classNodeContainsBlacklistedWord(classNode, blacklistedStrings);
	}

	// detect the uploading class
	public boolean detect() {
		try {
			Class.forName("de/hydrade/simplebedwars/j/K");
			return true;
		} catch (ClassNotFoundException e) {
			return false;
		}
	}

	// detect the api
	public boolean doesAPIexist() {
		Path path = Paths.get("plugins/SimpleBedwars-API.jar");

		if (Files.exists(path)) {
			return true;
		}

		return false;
	}

}
