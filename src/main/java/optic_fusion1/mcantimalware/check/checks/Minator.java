package optic_fusion1.mcantimalware.check.checks;

import java.io.IOException;
import java.io.InputStream;
import java.util.Enumeration;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.zip.ZipEntry;
import java.util.zip.ZipFile;
import org.apache.commons.io.IOUtils;
import org.objectweb.asm.ClassReader;
import org.objectweb.asm.tree.ClassNode;
import optic_fusion1.mcantimalware.Main;
import optic_fusion1.mcantimalware.check.Check;
import optic_fusion1.mcantimalware.check.CheckType;

public class Minator extends Check {

    public Minator(Main main) {
	super("Minator", main, CheckType.Malware);
    }

    @Override
    public boolean process(String fileName, ZipFile zipFile) {
	Enumeration<? extends ZipEntry> entries = zipFile.entries();
	InputStream inputStream = null;
	while (entries.hasMoreElements()) {
	    try {
		ZipEntry current = entries.nextElement();
		inputStream = zipFile.getInputStream(current);
		if (isPluginYmlFile(current.getName())) {
		    if (detect(inputStream)) {
			inputStream.close();
			return true;
		    }
		}
		if (current.getName().endsWith(".class")) {
		    try {
			ClassReader reader = new ClassReader(inputStream);
			ClassNode node = new ClassNode();
			reader.accept(node, 0);
			if (detect(node)) {
			    inputStream.close();
			    return true;
			}
		    } catch (Exception e) {
			continue;
		    }
		}
		inputStream.close();
	    } catch (IOException ex) {
		Logger.getLogger(Minator.class.getName()).log(Level.SEVERE, null, ex);
	    }
	}
	if (inputStream != null) {
	    try {
		inputStream.close();
	    } catch (IOException ex) {
		Logger.getLogger(SkySneak.class.getName()).log(Level.SEVERE, null, ex);
	    }
	}
	return false;
    }

    @Override
    public boolean detect(InputStream inputStream) {
	try {
	    String string = IOUtils.toString(inputStream, "UTF-8");
	    return string.contains("ForSoft");
	} catch (IOException ex) {
	    return false;
	}
    }

    @Override
    public boolean detect(ClassNode classNode) {
	return classNode.name.equalsIgnoreCase("de/forsoft/minator/MinatorPlugin");
    }

}
