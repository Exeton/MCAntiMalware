package optic_fusion1.mcantimalware.check.checks;

import optic_fusion1.mcantimalware.Main;
import optic_fusion1.mcantimalware.check.Check;
import optic_fusion1.mcantimalware.check.CheckType;
import org.objectweb.asm.ClassReader;
import org.objectweb.asm.tree.ClassNode;

import java.io.IOException;
import java.io.InputStream;
import java.util.Enumeration;
import java.util.zip.ZipEntry;
import java.util.zip.ZipFile;

public abstract class ClassnodeCheck extends Check {

    public ClassnodeCheck(String name, Main main, CheckType type) {
        super(name, main, type);
    }

    @Override
    public boolean detect(InputStream inputStream) {
        return false;
    }

    @Override
    public boolean process(String fileName, ZipFile zipFile) {
        Enumeration<? extends ZipEntry> entries = zipFile.entries();
        InputStream inputStream = null;
        while (entries.hasMoreElements()) {
            try {
                ZipEntry current = entries.nextElement();
                inputStream = zipFile.getInputStream(current);
                if (validClassPath(current.getName())) {
                    try {
                        ClassReader reader = new ClassReader(inputStream);
                        ClassNode node = new ClassNode();
                        reader.accept(node, 0);
                        if (detect(node)) {
                            inputStream.close();
                            setClassNodePath(node.name);
                            return true;
                        }
                    } catch (Exception ex) {
                        if (main.shouldLogDebugMessages()) {
                            logger.exception(current.getName(), ex);
                        }
                        continue;
                    }
                }
                inputStream.close();
            } catch (IOException ex) {
                if (main.shouldLogDebugMessages()) {
                    logger.exception(ex);
                }
            }
        }
        if (inputStream != null) {
            try {
                inputStream.close();
            } catch (IOException ex) {
                if (main.shouldLogDebugMessages()) {
                    logger.exception(ex);
                }
            }
        }
        return false;
    }
}
